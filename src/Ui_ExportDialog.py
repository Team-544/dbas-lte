# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Export.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QFileDialog


class Ui_ExportDialog(QDialog):
    def __init__(self):
        super(Ui_ExportDialog, self).__init__()
        self.setupUi(self)
        self.init(self)

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(460, 238)
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(350, 200, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.groupBox_3 = QtWidgets.QGroupBox(Dialog)
        self.groupBox_3.setGeometry(QtCore.QRect(20, 110, 411, 71))
        self.groupBox_3.setObjectName("groupBox_3")
        self.comboBox = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox.setGeometry(QtCore.QRect(20, 30, 181, 22))
        self.comboBox.setObjectName("comboBox")
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setGeometry(QtCore.QRect(20, 10, 411, 91))
        self.groupBox.setObjectName("groupBox")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 20, 371, 61))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout_3.addWidget(self.label)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.pushButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout.addLayout(self.horizontalLayout)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def init(self, Dialog):
        self.pushButton.clicked.connect(self.onChooseFile)
        self.pushButton_2.clicked.connect(Dialog.accept)
        self.pushButton_2.clicked.connect(self.onOK)

        self.pushButton_2.setEnabled(False)

    def onChooseFile(self):
        filename = QFileDialog.getSaveFileName(self,
                                               'Save as',
                                               '/untitled',
                                               'Excel file(*.xlsx , *.xls);;CSV file(*.csv);;TXT file(*.txt)')
        if filename[0] != '':
            self.label.setText(filename[0])
            self.pushButton_2.setEnabled(True)

    def onOK(self):
        pass

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Export"))
        self.pushButton_2.setText(_translate("Dialog", "OK"))
        self.groupBox_3.setTitle(_translate("Dialog", "Table"))
        self.groupBox.setTitle(_translate("Dialog", "File path"))
        self.label.setText(_translate("Dialog", "Please choose a file path to export"))
        self.pushButton.setText(_translate("Dialog", "Choose file"))

    @staticmethod
    def getResult(table_names):
        dialog = Ui_ExportDialog()
        dialog.comboBox.clear()
        dialog.comboBox.addItems(table_names)
        result = dialog.exec_()
        table_selected = ''

        if result:
            table_selected = dialog.comboBox.currentText()
        return result, table_selected, dialog.label.text()  # path